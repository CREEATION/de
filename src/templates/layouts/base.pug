-
  // template options
  let template = {
    data: {
      page_title: "Untitled Page"
    },
    options: {
      screenreader_intro: true,
      themes: [
        { id: "default", name: "Default" },
        { id: "dark_mode", name: "Dark Mode", checked: true },
        { id: "high_contrast", name: "High Contrast" },
      ]
    }
  }

block page-mixins
  include ../bits/index
  include ../elements/index
  include ../modules/index
  include ../sections/index

block page-template
  //- template architecture
  doctype html
  html(lang="en")
    head
      meta(charset="UTF-8")
      meta(name="viewport", content="width=device-width, initial-scale=1.0")
      meta(http-equiv="X-UA-Compatible", content="ie=edge")

      block page-title
        title= helpers.data(template, "page_title")

      block page-css
        block page-specific-css
        block page-global-css
          link(rel="stylesheet", href="/assets/css/creeation.css")

      block page-preload-scripts

    body
      if helpers.options(template, "screenreader_intro")
        .screenreader-only
          block screenreader-intro
            p This text should be hidden with CSS so it won't show visually, but screenreaders read it out loud.

      header.page-header
        //- div
        //-   each theme in helpers.options(template, "themes")
        //-     label(data-theme=theme.id)
        //-       input.theme-switch(type="radio", name="theme", checked=theme.checked||undefined)
        //-       | #{theme.name}

        block page-header
          //- h1= helpers.data(template, "page_title")

      main.page-main
        block page-main
          p Page Content would go here if there's any.

      footer.page-footer
        block page-footer
        small &copy; #{new Date().getFullYear()}
        span #{data.info.displayName} / #{data.info.author.name}

      block page-ready-scripts
        script.
          function ready(fn) {
            if (document.readyState != 'loading') {
              fn()
            } else {
              document.addEventListener('DOMContentLoaded', fn)
            }
          }

          ready(() => {
            let switches = document.querySelectorAll(".theme-switch")

            Array.prototype.forEach.call(switches, (el, i) => {
              if (el.getAttribute("checked") !== null) {
                document.body.setAttribute("class", `theme:${el.parentNode.getAttribute("data-theme")}`)
              }

              el.addEventListener("click", (e) => {
                const theme_id = e.target.parentNode.getAttribute("data-theme")
                const body_class = document.body.getAttribute("class")

                document.body.setAttribute("class", `theme:${theme_id}`)
              })
            })
          })
